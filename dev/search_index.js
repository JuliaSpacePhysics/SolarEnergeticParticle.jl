var documenterSearchIndex = {"docs":
[{"location":"missions/PSP/#Parker-Solar-Probe-(PSP)","page":"Parker Solar Probe (PSP)","title":"Parker Solar Probe (PSP)","text":"","category":"section"},{"location":"missions/PSP/#Overview","page":"Parker Solar Probe (PSP)","title":"Overview","text":"","category":"section"},{"location":"missions/PSP/","page":"Parker Solar Probe (PSP)","title":"Parker Solar Probe (PSP)","text":"The PSP data loader provides access to energetic particle data from the Integrated Science Investigation of the Sun (ISOIS) instrument suite aboard the Parker Solar Probe spacecraft.","category":"page"},{"location":"missions/PSP/#References","page":"Parker Solar Probe (PSP)","title":"References","text":"","category":"section"},{"location":"missions/PSP/","page":"Parker Solar Probe (PSP)","title":"Parker Solar Probe (PSP)","text":"PSP Mission: Parker Solar Probe\nISOIS Instrument: Integrated Science Investigation of the Sun\nData Access: Via CDAWeb through Speasy.jl","category":"page"},{"location":"missions/PSP/#Basic-Usage","page":"Parker Solar Probe (PSP)","title":"Basic Usage","text":"","category":"section"},{"location":"missions/PSP/","page":"Parker Solar Probe (PSP)","title":"Parker Solar Probe (PSP)","text":"List available datasets for PSP ISOIS","category":"page"},{"location":"missions/PSP/","page":"Parker Solar Probe (PSP)","title":"Parker Solar Probe (PSP)","text":"using SolarEnergeticParticle\n\ndatasets = get_datasets(:PSP, :ISOIS)","category":"page"},{"location":"missions/PSP/","page":"Parker Solar Probe (PSP)","title":"Parker Solar Probe (PSP)","text":"Get EPIHI data for a solar particle event","category":"page"},{"location":"missions/PSP/","page":"Parker Solar Probe (PSP)","title":"Parker Solar Probe (PSP)","text":"dataset = \"PSP_ISOIS-EPIHI_L2-HET-RATES60\"\ntmin = \"2021/10/9\"\ntmax = \"2021/10/10\"\ndata = get_data(dataset, tmin, tmax; verbose=true)\n\n# Or only get specific variables\ndata = get_data(dataset, (\"A_H_Flux\", \"A_Electrons_Rate\"), tmin, tmax)","category":"page"},{"location":"missions/PSP/","page":"Parker Solar Probe (PSP)","title":"Parker Solar Probe (PSP)","text":"# Print energy channel information\nforeach(println, data.A_H_Flux.metadata[\"LABL_PTR_1\"])","category":"page"},{"location":"missions/PSP/#Advanced-Usage","page":"Parker Solar Probe (PSP)","title":"Advanced Usage","text":"","category":"section"},{"location":"missions/PSP/#Time-Series-Analysis","page":"Parker Solar Probe (PSP)","title":"Time Series Analysis","text":"","category":"section"},{"location":"missions/PSP/","page":"Parker Solar Probe (PSP)","title":"Parker Solar Probe (PSP)","text":"Here we plot the proton fluxes and electron rates of A side every 2 channels averaged over 10 minutes.","category":"page"},{"location":"missions/PSP/","page":"Parker Solar Probe (PSP)","title":"Parker Solar Probe (PSP)","text":"using SpacePhysicsMakie, CairoMakie\nusing TimeseriesUtilities, Dates\n\nbegin\n    tvars2plot = map([data.A_Electrons_Rate, data.A_H_Flux]) do x\n        replace!(tmean(select_channel(x, isodd), Minute(10)), 0 => eps())\n    end\n    f = tplot(tvars2plot; plottype=Stairs, add_title=true)\n    ylims!(f.axes[1], 1e-3, 1e0)\n    ylims!(f.axes[2], 1e-3, 1e1)\n    f\nend","category":"page"},{"location":"missions/PSP/#Example:-Solar-Particle-Event-Analysis","page":"Parker Solar Probe (PSP)","title":"Example: Solar Particle Event Analysis","text":"","category":"section"},{"location":"missions/PSP/","page":"Parker Solar Probe (PSP)","title":"Parker Solar Probe (PSP)","text":"using SolarEnergeticParticle, CairoMakie, Statistics\n\nfunction analyze_sep_event(start_date, end_date)\n    # Load PSP EPIHI data\n    result = psp_load(\"PSP_ISOIS-EPIHI_L2-HET-RATES60\",\n                      start_date, end_date)\n\n    # Calculate background levels (first 20% of data)\n    n_background = div(nrow(result.data), 5)\n    background_flux = mean(skipmissing(result.data.flux_channel_1[1:n_background]))\n\n    # Find enhancement periods (flux > 3x background)\n    enhanced = result.data.flux_channel_1 .> 3 * background_flux\n\n    # Create figure\n    fig = Figure(resolution = (1000, 700))\n    ax = Axis(fig[1, 1],\n              xlabel = \"Time (UTC)\",\n              ylabel = \"Proton Flux (1/cm²/s/sr/MeV)\",\n              title = \"PSP Solar Particle Event Analysis\",\n              yscale = log10)\n\n    # Plot main data\n    lines!(ax, result.data.datetime, result.data.flux_channel_1,\n           label = \"0.5-1.0 MeV protons\", linewidth = 2, color = :blue)\n\n    # Add background lines\n    hlines!(ax, [background_flux], label = \"Background\",\n            linestyle = :dash, color = :gray, linewidth = 2)\n    hlines!(ax, [3*background_flux], label = \"3x Background\",\n            linestyle = :dot, color = :red, linewidth = 2)\n\n    # Highlight enhancement periods\n    enhanced_times = result.data.datetime[enhanced]\n    if !isempty(enhanced_times)\n        scatter!(ax, enhanced_times, result.data.flux_channel_1[enhanced],\n                label = \"Enhanced periods\", markersize = 8,\n                color = (:red, 0.7))\n    end\n\n    axislegend(ax, position = :rt)\n    fig\nend\n\n# Analyze April 2021 event\nfig = analyze_sep_event(\"2021/04/28\", \"2021/05/02\")\ndisplay(fig)","category":"page"},{"location":"vda/#Velocity-Dispersion-Analysis-(VDA)","page":"Velocity Dispersion Analysis","title":"Velocity Dispersion Analysis (VDA)","text":"","category":"section"},{"location":"vda/","page":"Velocity Dispersion Analysis","title":"Velocity Dispersion Analysis","text":"Velocity Dispersion Analysis is a technique for determining solar particle release times and propagation characteristics by analyzing the energy-dependent arrival times of solar energetic particles (SEPs).","category":"page"},{"location":"vda/#Physical-Principle","page":"Velocity Dispersion Analysis","title":"Physical Principle","text":"","category":"section"},{"location":"vda/#Setup","page":"Velocity Dispersion Analysis","title":"Setup","text":"","category":"section"},{"location":"vda/","page":"Velocity Dispersion Analysis","title":"Velocity Dispersion Analysis","text":"using SolarEnergeticParticle\nusing Dates\nusing SpacePhysicsMakie, CairoMakie\nusing TimeseriesUtilities","category":"page"},{"location":"vda/#Load-Multi-Energy-SEP-Data","page":"Velocity Dispersion Analysis","title":"Load Multi-Energy SEP Data","text":"","category":"section"},{"location":"vda/","page":"Velocity Dispersion Analysis","title":"Velocity Dispersion Analysis","text":"First, let's load SEP data:","category":"page"},{"location":"vda/","page":"Velocity Dispersion Analysis","title":"Velocity Dispersion Analysis","text":"# Load SOHO ERNE data for VDA analysis\ntmin = DateTime(2021, 10, 28, 14)\ntmax = DateTime(2021, 10, 29)\nbackground_range = (DateTime(2021, 10, 28, 14), DateTime(2021, 10, 28, 15))\n\ndata = get_data(\"SOLO_L2_EPD-HET-SUN-RATES\", tmin, tmax)","category":"page"},{"location":"vda/","page":"Velocity Dispersion Analysis","title":"Velocity Dispersion Analysis","text":"Electron_Flux = tmean(data.Electron_Flux, Minute(3))\nH_Flux = tmean(data.H_Flux, Minute(3))\nfaxs = tplot([Electron_Flux, select_channel(H_Flux, 1:4:36)])\nylims!(faxs.axes[1], 5e-2, 2e3)\nylims!(faxs.axes[2], 1e-2, 1e2)\nfaxs","category":"page"},{"location":"vda/#Multi-Channel-Onset-Detection","page":"Velocity Dispersion Analysis","title":"Multi-Channel Onset Detection","text":"","category":"section"},{"location":"vda/","page":"Velocity Dispersion Analysis","title":"Velocity Dispersion Analysis","text":"Detect onsets across multiple energy channels using sigma onset detection:","category":"page"},{"location":"vda/","page":"Velocity Dispersion Analysis","title":"Velocity Dispersion Analysis","text":"vda_proton = vda(tmean(data.H_Flux, Minute(5)), background_range; onset = (N=3, method=:sigma))\n\nprintln(\"VDA Results:\")\nprintln(\"Release time: $(vda_proton.release_time)\")\nprintln(\"Path length: $(round(vda_proton.path_length_au, digits=2)) AU\")","category":"page"},{"location":"vda/#VDA-Visualization","page":"Velocity Dispersion Analysis","title":"VDA Visualization","text":"","category":"section"},{"location":"vda/","page":"Velocity Dispersion Analysis","title":"Velocity Dispersion Analysis","text":"function plot_vda_analysis!(ax, vda_result)\n    onsets = vda_result.onset_times\n    energies = vda_result.energies\n\n    release_time = vda_result.release_time\n\n    # Plot data points\n    scatter!(ax, vda_result.inverse_betas, onsets; label=\"Observed Onsets\")\n\n    # Plot linear fit\n    fit_times = [unix2datetime(vda_result.intercept + vda_result.slope * inv_beta)\n                 for inv_beta in vda_result.inverse_betas]\n    lines!(ax, vda_result.inverse_betas, fit_times; linewidth=3, label=\"Linear Fit (Path Length: $(round(vda_result.path_length_au, digits=2)) AU)\")\n    # Add release time line\n    hlines!(ax, Dates.value(release_time), linestyle=:dash, label=\"Release Time $release_time\")\nend\n\nfunction plot_vda_analysis_error_bands!(ax, vda_result)\n    upper_fit = [unix2datetime(vda_result.intercept + 2*vda_result.intercept_error +\n                              vda_result.slope * inv_beta) for inv_beta in vda_result.inverse_betas]\n    lower_fit = [unix2datetime(vda_result.intercept - 2*vda_result.intercept_error +\n                              vda_result.slope * inv_beta) for inv_beta in vda_result.inverse_betas]\n    band!(ax, vda_result.inverse_betas, lower_fit, upper_fit, color=(:red, 0.2), label=\"95% Confidence\")\nend\n\n# Create the VDA plot\nfig = Figure(size=(800, 600))\nax = Axis(fig[1, 1],\n            xlabel=\"Inverse Beta (β⁻¹)\",\n            ylabel=\"Onset Time\",\n            title=\"SOHO ERNE SEP Event - October 28, 2021\")\nplot_vda_analysis!(ax, vda_proton)\n\nfig","category":"page"},{"location":"vda/#Different-Particle-Species","page":"Velocity Dispersion Analysis","title":"Different Particle Species","text":"","category":"section"},{"location":"vda/","page":"Velocity Dispersion Analysis","title":"Velocity Dispersion Analysis","text":"vda_electron = vda(tmean(data.Electron_Flux, Minute(1)), background_range; onset = (N=10, ), particle = :electron)\n\nprintln(\"Electron VDA:\")\nprintln(\"Release time: $(vda_electron.release_time)\")\nprintln(\"Path length: $(round(vda_electron.path_length_au, digits=2)) AU\")\n\nplot_vda_analysis!(ax, vda_electron)\naxislegend(; position=:lt)\n\nfig","category":"page"},{"location":"onset/#Solar-Energetic-Particle-Onset-Analysis","page":"Onset Analysis","title":"Solar Energetic Particle Onset Analysis","text":"","category":"section"},{"location":"onset/#Setup","page":"Onset Analysis","title":"Setup","text":"","category":"section"},{"location":"onset/","page":"Onset Analysis","title":"Onset Analysis","text":"First, let's load the required packages and set up the analysis environment:","category":"page"},{"location":"onset/","page":"Onset Analysis","title":"Onset Analysis","text":"using SolarEnergeticParticle\nusing Dates\nusing SpacePhysicsMakie, CairoMakie","category":"page"},{"location":"onset/","page":"Onset Analysis","title":"Onset Analysis","text":"The time range for the analysis is set as follows:","category":"page"},{"location":"onset/","page":"Onset Analysis","title":"Onset Analysis","text":"# Analysis time range (October 28-29, 2021 SEP event)\ntmin = DateTime(2021, 10, 28)\ntmax = DateTime(2021, 10, 29)\n\n# Define background time range (before the event)\nbackground_range = (DateTime(2021, 10, 28, 10, 0, 0), DateTime(2021, 10, 28, 12, 0, 0))","category":"page"},{"location":"onset/#Load-SEP-Data","page":"Onset Analysis","title":"Load SEP Data","text":"","category":"section"},{"location":"onset/","page":"Onset Analysis","title":"Onset Analysis","text":"Load data from the SOHO ERNE-HED instrument:","category":"page"},{"location":"onset/","page":"Onset Analysis","title":"Onset Analysis","text":"data = get_data(\"SOHO_ERNE-HED_L2-1MIN\", tmin, tmax)\ntplot(data.PH)","category":"page"},{"location":"onset/#Perform-Onset-Analysis","page":"Onset Analysis","title":"Perform Onset Analysis","text":"","category":"section"},{"location":"onset/","page":"Onset Analysis","title":"Onset Analysis","text":"Now we can perform the onset determination analysis using find_onset and find_peak functions.","category":"page"},{"location":"onset/","page":"Onset Analysis","title":"Onset Analysis","text":"# Select a specific channel\nchannel = 4\nI = select_channel(data.PH, channel)\npeak = find_peak(I)\nonset = find_onset(I, background_range)","category":"page"},{"location":"onset/#Visualization","page":"Onset Analysis","title":"Visualization","text":"","category":"section"},{"location":"onset/","page":"Onset Analysis","title":"Onset Analysis","text":"Create a comprehensive plot showing the onset analysis results:","category":"page"},{"location":"onset/","page":"Onset Analysis","title":"Onset Analysis","text":"f = tplot(I)\n\n_tvspan!(ax, tmin, tmax; kwargs...) = vspan!(ax, tmin, Dates.value.(tmax); kwargs...)\n\nfunction onsetplot!(ax, onset_time, bg_timerange, bg_mean, bg_std, peak_time = nothing, n = 2)\n    # Add background region if specified\n    onset_plot = tlines!(ax, onset_time, color = :red, label = \"Onset $(round(onset_time, Second))\")\n    bg_plot = _tvspan!(ax, bg_timerange...; alpha = 0.2, color = :gray, label = \"Background\")\n    bg_stat_plot1 = hlines!(bg_mean, linestyle = :dash, color = :cyan, label = \"Mean of Background\")\n    bg_stat_plot2 = hlines!(bg_mean + n*bg_std, linestyle = :dash, color = :cyan, label = \"Mean + $n Std of Background\")\n    plots = [onset_plot, bg_plot, bg_stat_plot1, bg_stat_plot2]\n\n    if peak_time !== nothing\n        peak_plot = tlines!(ax, peak_time, color = :orange, linewidth = 2, label = \"Peak $(round(peak_time, Second))\")\n        push!(plots, peak_plot)\n    end\n\n    return plots\nend\n\nonsetplot!(f.axes[1], onset..., peak[1])\nylims!(1e-4, 5e-1)\naxislegend(f.axes[1]; position = :lt)\nf","category":"page"},{"location":"onset/#References","page":"Onset Analysis","title":"References","text":"","category":"section"},{"location":"onset/","page":"Onset Analysis","title":"Onset Analysis","text":"onset_determination.ipynb - serpentine\nPalmroos, C., Gieseler, J., Dresing N., et al. (2022). Solar energetic particle time series analysis with Python. Front. Astronomy Space Sci. 9. doi:10.3389/fspas.2022.1073578","category":"page"},{"location":"missions/Wind/#Wind","page":"Wind","title":"Wind","text":"","category":"section"},{"location":"missions/Wind/#Overview","page":"Wind","title":"Overview","text":"","category":"section"},{"location":"missions/Wind/","page":"Wind","title":"Wind","text":"The Wind data loader provides access to energetic particle data from the 3DP (3-Dimensional Plasma and Energetic Particle Investigation) instrument aboard the Wind spacecraft.","category":"page"},{"location":"missions/Wind/#References","page":"Wind","title":"References","text":"","category":"section"},{"location":"missions/Wind/","page":"Wind","title":"Wind","text":"Wind Mission: Wind Spacecraft\n3DP Instrument: 3-Dimensional Plasma and Energetic Particle Investigation\nData Access: Via CDAWeb through Speasy.jl","category":"page"},{"location":"missions/Wind/#Supported-Instruments","page":"Wind","title":"Supported Instruments","text":"","category":"section"},{"location":"missions/Wind/#3DP-(3-Dimensional-Plasma-and-Energetic-Particle-Investigation)","page":"Wind","title":"3DP (3-Dimensional Plasma and Energetic Particle Investigation)","text":"","category":"section"},{"location":"missions/Wind/#Electron-Datasets","page":"Wind","title":"Electron Datasets","text":"","category":"section"},{"location":"missions/Wind/","page":"Wind","title":"Wind","text":"SFSP: Suprathermal electron omnidirectional fluxes (27-520 keV)\nSFPD: Suprathermal electron energy-angle distributions (27-520 keV)\nELSP: Low energy electron omnidirectional (7-300 keV)\nELPD: Low energy electron energy-angle (7-300 keV)\nEHSP: High energy electron omnidirectional (100-3200 keV)\nEHPD: High energy electron energy-angle (100-3200 keV)","category":"page"},{"location":"missions/Wind/#Proton-Datasets","page":"Wind","title":"Proton Datasets","text":"","category":"section"},{"location":"missions/Wind/","page":"Wind","title":"Wind","text":"SOSP: Suprathermal proton omnidirectional fluxes (70 keV - 6.8 MeV)\nSOPD: Suprathermal proton energy-angle distributions (70 keV - 6.8 MeV)\nPLSP: Low energy proton omnidirectional (30 keV - 2 MeV)\nPLPD: Low energy proton energy-angle (30 keV - 2 MeV)\nPHSP: High energy proton omnidirectional (1-30 MeV)\nPHPD: High energy proton energy-angle (1-30 MeV)","category":"page"},{"location":"missions/Wind/#Basic-Usage","page":"Wind","title":"Basic Usage","text":"","category":"section"},{"location":"missions/Wind/","page":"Wind","title":"Wind","text":"List available Wind datasets:","category":"page"},{"location":"missions/Wind/","page":"Wind","title":"Wind","text":"using SolarEnergeticParticle\n\ndatasets = get_datasets(:WI, \"3DP\")","category":"page"},{"location":"missions/Wind/","page":"Wind","title":"Wind","text":"Load Wind 3DP data:","category":"page"},{"location":"missions/Wind/","page":"Wind","title":"Wind","text":"# Suprathermal electron data\ndataset = \"WI_SFSP_3DP\"\ntmin = \"2021/10/28T06\"\ntmax = \"2021/10/29T12\"\ndata = get_data(dataset, tmin, tmax; verbose=true)","category":"page"},{"location":"missions/Wind/","page":"Wind","title":"Wind","text":"using SpacePhysicsMakie, CairoMakie\n\ntvars2plot = replace!(data.FLUX, 0 => eps())\nf = tplot(tvars2plot; plottype=Stairs)\nylims!.(f.axes, 5e-6, 8e-2)\nf","category":"page"},{"location":"missions/STEREO/#Solar-TErrestrial-RElations-Observatory-(STEREO)","page":"Solar TErrestrial RElations Observatory (STEREO)","title":"Solar TErrestrial RElations Observatory (STEREO)","text":"","category":"section"},{"location":"missions/STEREO/#Overview","page":"Solar TErrestrial RElations Observatory (STEREO)","title":"Overview","text":"","category":"section"},{"location":"missions/STEREO/","page":"Solar TErrestrial RElations Observatory (STEREO)","title":"Solar TErrestrial RElations Observatory (STEREO)","text":"The STEREO data loader provides access to energetic particle data from the twin STEREO-A (Ahead) and STEREO-B (Behind) spacecraft.","category":"page"},{"location":"missions/STEREO/#References","page":"Solar TErrestrial RElations Observatory (STEREO)","title":"References","text":"","category":"section"},{"location":"missions/STEREO/","page":"Solar TErrestrial RElations Observatory (STEREO)","title":"Solar TErrestrial RElations Observatory (STEREO)","text":"STEREO Mission: Solar TErrestrial RElations Observatory\nData Access: Via CDAWeb through Speasy.jl","category":"page"},{"location":"missions/STEREO/#Supported-Instruments","page":"Solar TErrestrial RElations Observatory (STEREO)","title":"Supported Instruments","text":"","category":"section"},{"location":"missions/STEREO/#HET-(High-Energy-Telescope)","page":"Solar TErrestrial RElations Observatory (STEREO)","title":"HET (High Energy Telescope)","text":"","category":"section"},{"location":"missions/STEREO/","page":"Solar TErrestrial RElations Observatory (STEREO)","title":"Solar TErrestrial RElations Observatory (STEREO)","text":"Energy range: 13.6-100 MeV/nucleon\nSpecies: Protons, Helium, and heavier ions","category":"page"},{"location":"missions/STEREO/#LET-(Low-Energy-Telescope)","page":"Solar TErrestrial RElations Observatory (STEREO)","title":"LET (Low Energy Telescope)","text":"","category":"section"},{"location":"missions/STEREO/","page":"Solar TErrestrial RElations Observatory (STEREO)","title":"Solar TErrestrial RElations Observatory (STEREO)","text":"Energy range: 1.8-12 MeV/nucleon\nSpecies: Protons, He4, He3, and heavier ions","category":"page"},{"location":"missions/STEREO/#SEPT-(Solar-Electron-and-Proton-Telescope)","page":"Solar TErrestrial RElations Observatory (STEREO)","title":"SEPT (Solar Electron and Proton Telescope)","text":"","category":"section"},{"location":"missions/STEREO/","page":"Solar TErrestrial RElations Observatory (STEREO)","title":"Solar TErrestrial RElations Observatory (STEREO)","text":"Electron energy range: 45-425 keV\nProton energy range: 84-6500 keV\nMultiple viewing directions","category":"page"},{"location":"missions/STEREO/#Basic-Usage","page":"Solar TErrestrial RElations Observatory (STEREO)","title":"Basic Usage","text":"","category":"section"},{"location":"missions/STEREO/","page":"Solar TErrestrial RElations Observatory (STEREO)","title":"Solar TErrestrial RElations Observatory (STEREO)","text":"List available STEREO datasets:","category":"page"},{"location":"missions/STEREO/","page":"Solar TErrestrial RElations Observatory (STEREO)","title":"Solar TErrestrial RElations Observatory (STEREO)","text":"using SolarEnergeticParticle\n\nstb_datasets = get_datasets(:STB)","category":"page"},{"location":"missions/STEREO/","page":"Solar TErrestrial RElations Observatory (STEREO)","title":"Solar TErrestrial RElations Observatory (STEREO)","text":"Load STEREO data:","category":"page"},{"location":"missions/STEREO/","page":"Solar TErrestrial RElations Observatory (STEREO)","title":"Solar TErrestrial RElations Observatory (STEREO)","text":"# STEREO-A HET data\ndataset = \"STA_L1_HET\"\ntmin = \"2021/10/28T06\"\ntmax = \"2021/10/29T12\"\ndata = get_data(dataset, \"Electron_Flux\", tmin, tmax);","category":"page"},{"location":"missions/STEREO/","page":"Solar TErrestrial RElations Observatory (STEREO)","title":"Solar TErrestrial RElations Observatory (STEREO)","text":"using SpacePhysicsMakie, CairoMakie\n\ntvars2plot = replace!(data.Electron_Flux, 0 => eps())\nf = tplot(tvars2plot; plottype=Stairs)\nylims!.(f.axes, 5e-2, 2e2)\nf","category":"page"},{"location":"missions/SolO/#Solar-Orbiter-(SolO)","page":"Solar Orbiter (SolO)","title":"Solar Orbiter (SolO)","text":"","category":"section"},{"location":"missions/SolO/","page":"Solar Orbiter (SolO)","title":"Solar Orbiter (SolO)","text":"using SolarEnergeticParticle: get_data, get_datasets, select_channel\n\nget_datasets(:SOLO, :EPD, :EPT)","category":"page"},{"location":"missions/SolO/","page":"Solar Orbiter (SolO)","title":"Solar Orbiter (SolO)","text":"dataset = \"SOLO_L2_EPD-EPT-SUN-RATES\"\ntmin = \"20201210T23\"\ntmax = \"20201211T12\"\ndata_sun = get_data(dataset, tmin, tmax; verbose=true)","category":"page"},{"location":"missions/SolO/","page":"Solar Orbiter (SolO)","title":"Solar Orbiter (SolO)","text":"using SpacePhysicsMakie, CairoMakie\n\ndata_asun = get_data(\"SOLO_L2_EPD-EPT-ASUN-RATES\", tmin, tmax)\ndata_north = get_data(\"SOLO_L2_EPD-EPT-NORTH-RATES\", tmin, tmax)\ndata_south = get_data(\"SOLO_L2_EPD-EPT-SOUTH-RATES\", tmin, tmax)\n\nbegin\n    tvars2plot = map([data_sun.Electron_Flux, data_asun.Electron_Flux, data_north.Electron_Flux, data_south.Electron_Flux]) do x\n        replace!(select_channel(x, 1:4:20), 0 => eps())\n    end\n    f = tplot(tvars2plot; plottype=Stairs)\n    ylims!.(f.axes, 5e1, 5e5)\n    f\nend","category":"page"},{"location":"missions/SolO/","page":"Solar Orbiter (SolO)","title":"Solar Orbiter (SolO)","text":"Plot the 6th energy channel of electron flux for different views","category":"page"},{"location":"missions/SolO/","page":"Solar Orbiter (SolO)","title":"Solar Orbiter (SolO)","text":"using SpacePhysicsMakie, CairoMakie\n\nbegin\n    tvars2plot = map([data_sun.Electron_Flux, data_asun.Electron_Flux, data_north.Electron_Flux, data_south.Electron_Flux]) do x\n        replace!(select_channel(x, 6), 0 => eps())\n    end\n    for i in 1:4\n        tvars2plot[i].metadata[:labels] = [\"Sun\", \"Anti-Sun\", \"North\", \"South\"][i]\n    end\n    f = tplot((tvars2plot,))\n    ylims!(5e1, 5e5)\n    f\nend","category":"page"},{"location":"#SolarEnergeticParticle","page":"Home","title":"SolarEnergeticParticle","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"A Julia package for loading and analyzing Solar Energetic Particle (SEP) data from multiple space missions.","category":"page"},{"location":"#Tutorials","page":"Home","title":"Tutorials","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Onset Analysis - CUSUM-based onset detection\nVelocity Dispersion Analysis (VDA) - Determine particle release times and path lengths","category":"page"},{"location":"#Mission-support","page":"Home","title":"Mission support","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"In theory, any dataset available in CDAWeb is supported. The following missions are tested and verified.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Parker Solar Probe (PSP)\nSOHO \nSTEREO\nWind","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"#API-Reference","page":"Home","title":"API Reference","text":"","category":"section"},{"location":"#SolarEnergeticParticle.DatasetInfo","page":"Home","title":"SolarEnergeticParticle.DatasetInfo","text":"DatasetInfo\n\nStructure containing metadata about a loaded dataset.\n\nFields\n\nenergy_channels::Dict{String, Vector{Float64}}: Energy channel information\nunits::Dict{String, String}: Units for each data column\ninstrument::String: Instrument name\nspacecraft::String: Spacecraft name\ndata_level::String: Data processing level (e.g., \"L2\")\ntime_resolution::String: Temporal resolution of the data\n\n\n\n\n\n","category":"type"},{"location":"#SolarEnergeticParticle.cusum_onset_detection-NTuple{4, Any}","page":"Home","title":"SolarEnergeticParticle.cusum_onset_detection","text":"cusum_onset_detection(I, μ, σ; h = nothing, k = nothing, n = 2, N = nothing)\ncusum_onset_detection(I, times, μ, σ; kw...)\n\nDetect onset time using Poisson-CUSUM (Cumulative Sum) algorithm, where I is the (intensity) time series, and μ and σ are the mean and standard deviation of the background, k is the control parameter.\n\nThe CUSUM function S for each timestamp for the standardized intensity I_z = fracI-μσ was then calculated as follows: \n\nSi = max(0 I_zi - k + Si-1)\n\nwhere S0 = 0. When S exceeded the hastiness threshold h, a warning signal was given. After N consecutive warning signals, an event was found and the first timestamp of these consecutive warning signals is identified as the onset time. \n\nNote that:\n\nμ and σ are used to calculate the control parameter k = fracnln(μ + n σ) - ln(μ) when k is not specified.\nn is a coefficient that was usually set to 2 and the control parameter k was rounded to the nearest integer value when k1. \nThe hastiness threshold h was set to 1 when k = 1 and h = 2 otherwise (followed the practice introduced by Huttunen-Heikinmaa et al. 2005). \nN are suggested to correspond to 30 minutes of threshold-exceeding intensity.\n\n\n\n\n\n","category":"method"},{"location":"#SolarEnergeticParticle.find_onset-Tuple{AbstractVector, Any}","page":"Home","title":"SolarEnergeticParticle.find_onset","text":"find_onset(I, bg_timerange; method = :cusum, kwargs...)\n\nPerform onset determination analysis on time series I using background statistics from bg_timerange.\n\nArguments\n\nmethod: Detection method (:cusum or :sigma, default: :cusum)\nkwargs...: Additional parameters passed to the detection method\n\nReturns\n\nNamed tuple with onset_time, bg_timerange, bg_mean, and bg_std.\n\nSee also: cusum_onset_detection, sigma_onset_detection\n\n\n\n\n\n","category":"method"},{"location":"#SolarEnergeticParticle.find_peak-Tuple{Any}","page":"Home","title":"SolarEnergeticParticle.find_peak","text":"find_peak(I)\n\nFind the peak time and value of a time series I.\n\n\n\n\n\n","category":"method"},{"location":"#SolarEnergeticParticle.select_channel-Tuple{Any, Any}","page":"Home","title":"SolarEnergeticParticle.select_channel","text":"select_channel(data, indices)\nselect_channel(data, predicate)\n\nSelect specific channels (columns) from data while preserving metadata structure, including labels. \n\nExamples\n\n# Select specific energy channels\nI_low = select_channel(data.PH, 1:3)        # First 3 channels\nI_mid = select_channel(data.PH, [4, 6, 8])  # Specific channels\nI_high = select_channel(data.PH, 10:15)     # High energy range\n\n# Select using predicates\nI_odd = select_channel(data.PH, isodd)      # Odd-numbered channels\nI_subset = select_channel(data.PH, x -> x > 5)  # Channels above 5\n\n# Single channel for onset analysis\nI_channel = select_channel(data.PH, 4)      # Channel 4 only\n\n\n\n\n\n","category":"method"},{"location":"#SolarEnergeticParticle.sigma_onset_detection-NTuple{4, Any}","page":"Home","title":"SolarEnergeticParticle.sigma_onset_detection","text":"sigma_onset_detection(I, μ, σ; n = 2, N = nothing)\nsigma_onset_detection(I, times, μ, σ; n = 2, N = nothing)\n\nDetect onset time using n-sigma threshold method when intensity I exceeds μ + n*σ for N consecutive points.\n\nReturns\n\nNamed tuple with time and N.\n\n\n\n\n\n","category":"method"},{"location":"#SolarEnergeticParticle.vda-Tuple{Any, AbstractArray{<:Union{Unitful.Quantity{T, 𝐋^2 𝐌 𝐓^-2, U}, Unitful.Level{L, S, Unitful.Quantity{T, 𝐋^2 𝐌 𝐓^-2, U}} where {L, S}} where {T, U}}}","page":"Home","title":"SolarEnergeticParticle.vda","text":"vda(times, energies::AbstractArray{<:Energy}; particle = :proton, mass = nothing)\nvda(fluxes, background_timerange; onset = (;), kw...)\n\nPerform Velocity Dispersion Analysis (VDA) to determine solar particle release time t₀ and path length s using onset times across different energies.\n\nPrinciple\n\nVDA is based on the fact that solar energetic particles of different energies travel at different speeds from the Sun to the observer. Higher energy particles arrive earlier than lower energy particles if they are released simultaneously from the source.\n\nThe relationship between onset time t and inverse velocity β¹ follows:\n\nt = t₀ + fracsc  β¹\n\nwhere: t is the observed onset time, β = vc = sqrt1 - (frac11 + Emc^2)^2.\n\nLinear regression of onset times versus β⁻¹ yields the release time (intercept) and path length (slope × c).\n\nArguments\n\nonsets: Onset times for different energy channels\nenergies: Particle energies (MeV) corresponding to onset times\nmin_points=2: Minimum number of onset points required for analysis  \n\nReturns\n\nA named tuple with:\n\nrelease_time: Estimated particle release time at source\npath_length_au: Path length in AU  \n\nSee also: find_onset\n\n\n\n\n\n","category":"method"},{"location":"missions/SOHO/#Solar-and-Heliospheric-Observatory-(SOHO)","page":"Solar and Heliospheric Observatory (SOHO)","title":"Solar and Heliospheric Observatory (SOHO)","text":"","category":"section"},{"location":"missions/SOHO/#Overview","page":"Solar and Heliospheric Observatory (SOHO)","title":"Overview","text":"","category":"section"},{"location":"missions/SOHO/","page":"Solar and Heliospheric Observatory (SOHO)","title":"Solar and Heliospheric Observatory (SOHO)","text":"The SOHO data loader provides access to energetic particle data from multiple instruments aboard the Solar and Heliospheric Observatory spacecraft.","category":"page"},{"location":"missions/SOHO/#References","page":"Solar and Heliospheric Observatory (SOHO)","title":"References","text":"","category":"section"},{"location":"missions/SOHO/","page":"Solar and Heliospheric Observatory (SOHO)","title":"Solar and Heliospheric Observatory (SOHO)","text":"SOHO Mission: Solar and Heliospheric Observatory\nData Access: Via CDAWeb through Speasy.jl","category":"page"},{"location":"missions/SOHO/#Supported-Instruments","page":"Solar and Heliospheric Observatory (SOHO)","title":"Supported Instruments","text":"","category":"section"},{"location":"missions/SOHO/#CELIAS-(Charge,-Element,-and-Isotope-Analysis-System)","page":"Solar and Heliospheric Observatory (SOHO)","title":"CELIAS (Charge, Element, and Isotope Analysis System)","text":"","category":"section"},{"location":"missions/SOHO/","page":"Solar and Heliospheric Observatory (SOHO)","title":"Solar and Heliospheric Observatory (SOHO)","text":"SEM: Solar Extreme-ultraviolet Monitor\nEnergy range: 0.08-2.0 MeV (protons), 0.32-8.0 MeV/nucleon (He4), 0.64-16.0 MeV/nucleon (CNO)","category":"page"},{"location":"missions/SOHO/#COSTEP-EPHIN-(Comprehensive-Suprathermal-and-Energetic-Particle-Analyzer)","page":"Solar and Heliospheric Observatory (SOHO)","title":"COSTEP-EPHIN (Comprehensive Suprathermal and Energetic Particle Analyzer)","text":"","category":"section"},{"location":"missions/SOHO/","page":"Solar and Heliospheric Observatory (SOHO)","title":"Solar and Heliospheric Observatory (SOHO)","text":"EPHIN: Electron Proton Helium Instrument\nEnergy range: 4.3-53.0 MeV (protons), 4.3-53.0 MeV/nucleon (helium), 0.25-3.0 MeV (electrons)","category":"page"},{"location":"missions/SOHO/#ERNE-(Energetic-and-Relativistic-Nuclei-and-Electron-experiment)","page":"Solar and Heliospheric Observatory (SOHO)","title":"ERNE (Energetic and Relativistic Nuclei and Electron experiment)","text":"","category":"section"},{"location":"missions/SOHO/","page":"Solar and Heliospheric Observatory (SOHO)","title":"Solar and Heliospheric Observatory (SOHO)","text":"LED: Low Energy Detector (1.3-13.0 MeV)\nHED: High Energy Detector (13.0-100.0 MeV)","category":"page"},{"location":"missions/SOHO/#Basic-Usage","page":"Solar and Heliospheric Observatory (SOHO)","title":"Basic Usage","text":"","category":"section"},{"location":"missions/SOHO/","page":"Solar and Heliospheric Observatory (SOHO)","title":"Solar and Heliospheric Observatory (SOHO)","text":"List available SOHO datasets:","category":"page"},{"location":"missions/SOHO/","page":"Solar and Heliospheric Observatory (SOHO)","title":"Solar and Heliospheric Observatory (SOHO)","text":"using SolarEnergeticParticle\n\ndatasets = get_datasets(:SOHO)","category":"page"},{"location":"missions/SOHO/","page":"Solar and Heliospheric Observatory (SOHO)","title":"Solar and Heliospheric Observatory (SOHO)","text":"Load SOHO data:","category":"page"},{"location":"missions/SOHO/","page":"Solar and Heliospheric Observatory (SOHO)","title":"Solar and Heliospheric Observatory (SOHO)","text":"# ERNE High Energy Detector data\ndataset = \"SOHO_ERNE-HED_L2-1MIN\"\ntmin = \"2021/10/28T06\"\ntmax = \"2021/10/29T12\"\ndata = get_data(dataset, tmin, tmax; verbose=true)","category":"page"},{"location":"missions/SOHO/#Advanced-Usage","page":"Solar and Heliospheric Observatory (SOHO)","title":"Advanced Usage","text":"","category":"section"},{"location":"missions/SOHO/","page":"Solar and Heliospheric Observatory (SOHO)","title":"Solar and Heliospheric Observatory (SOHO)","text":"using SpacePhysicsMakie, CairoMakie\n\nbegin\n    tvars2plot = map([data.AH, data.PH]) do x\n        replace!(select_channel(x, 1:3:10), 0 => eps())\n    end\n    f = tplot(tvars2plot; plottype=Stairs)\n    ylims!.(f.axes, 5e-5, 8e-1)\n    f\nend","category":"page"}]
}
